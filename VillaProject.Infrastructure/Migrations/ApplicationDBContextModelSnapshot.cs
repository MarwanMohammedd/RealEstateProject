// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace VillaProject.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VillaProject.Domain.Entities.Villa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VillaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 5, 19, 5, 55, 50, 112, DateTimeKind.Local).AddTicks(4637),
                            Description = "VillaNameOne and 4 rooms and bathroom",
                            ImageUrl = "Https://placeholder.com",
                            Occupancy = 4,
                            Price = 19000.50m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VillaName = "VillaNameOne"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 5, 19, 5, 55, 50, 112, DateTimeKind.Local).AddTicks(4684),
                            Description = "VillaNameTwo and 1 rooms",
                            ImageUrl = "Https://placeholder.com",
                            Occupancy = 1,
                            Price = 2500.50m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VillaName = "VillaNameTwo"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 5, 19, 5, 55, 50, 112, DateTimeKind.Local).AddTicks(4691),
                            Description = "VillaNameThree and 2 rooms",
                            ImageUrl = "Https://placeholder.com",
                            Occupancy = 2,
                            Price = 5000.57m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VillaName = "VillaNameTwo"
                        });
                });

            modelBuilder.Entity("VillaProject.Domain.Entities.VillaNumber", b =>
                {
                    b.Property<int>("VillaNumberID")
                        .HasColumnType("int");

                    b.Property<string>("MoreInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaID")
                        .HasColumnType("int");

                    b.HasKey("VillaNumberID");

                    b.HasIndex("VillaID");

                    b.ToTable("VillaNumber");
                });

            modelBuilder.Entity("VillaProject.Domain.Entities.VillaNumber", b =>
                {
                    b.HasOne("VillaProject.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
